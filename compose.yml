services:
  bazarr:
    container_name: bazarr
    depends_on:
      rclone:
        condition: service_healthy
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    image: lscr.io/linuxserver/bazarr:latest
    restart: unless-stopped
    volumes:
      - ./config/bazarr:/config
      - ./data/r2/media/movies:/data/movies
      - ./data/r2/media/shows:/data/shows
  jelly:
    container_name: jelly
    depends_on:
      rclone:
        condition: service_healthy
    environment:
      - JELLYFIN_PublishedServerUrl=${JELLYFIN_URL}
    image: jellyfin/jellyfin:latest
    restart: unless-stopped
    user: ${PUID}:${PGID}
    volumes:
      - ./config/jelly/cache:/cache
      - ./config/jelly/config:/config
      - ./data/r2/media:/media
  jellyseerr:
    container_name: jellyseerr
    depends_on:
      jelly:
        condition: service_started
    environment:
      - TZ=${TZ}
    image: fallenbagel/jellyseerr:latest
    restart: unless-stopped
    volumes:
      - ./config/jellyseerr:/app/config
  prowlarr:
    container_name: prowlarr
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    image: lscr.io/linuxserver/prowlarr:develop
    restart: unless-stopped
    volumes:
      - ./config/prowlarr:/config
  proxy:
    container_name: proxy
    environment:
      - DISABLE_IPV6=true
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    image: jc21/nginx-proxy-manager:latest
    ports:
      - 443:443
      - 80:80
    restart: unless-stopped
    volumes:
      - ./config/proxy/data:/data
      - ./config/proxy/letsencrypt:/etc/letsencrypt
  radarr:
    container_name: radarr
    depends_on:
      rclone:
        condition: service_healthy
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    image: lscr.io/linuxserver/radarr:latest
    restart: unless-stopped
    volumes:
      - ./config/radarr:/config
      - ./data/downloads:/data/downloads
      - ./data/r2/media/movies:/data/movies
  rclone:
    cap_add:
      - SYS_ADMIN
    command: >
      mount r2:x-data /mnt/volume/r2
      --allow-other
      --gid ${PGID}
      --uid ${PUID}
      --umask 002
      --vfs-cache-max-size 32G
      --vfs-cache-mode full
    container_name: rclone
    devices:
      - /dev/fuse
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - RCLONE_CONFIG=/config/rclone.conf
    healthcheck:
      interval: 2s
      retries: 5
      test: ["CMD", "ls", "/mnt/volume/r2"]
    image: rclone/rclone:latest
    restart: unless-stopped
    security_opt:
      - apparmor:unconfined
    volumes:
      - ./config/rclone:/config
      - ./data:/mnt/volume:shared
  sonarr:
    container_name: sonarr
    depends_on:
      rclone:
        condition: service_healthy
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    image: lscr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    volumes:
      - ./config/sonarr:/config
      - ./data/downloads:/data/downloads
      - ./data/r2/media/shows:/data/shows
  torrent:
    cap_add:
      - NET_ADMIN
    container_name: torrent
    entrypoint:
      - /bin/bash
      - /start.sh
    environment:
      - ENABLEPROTONVPNPORTFWD=1
      - LAN_NETWORK=${SUBNET}
      - PGID=${PGID}
      - PUID=${PUID}
      - QBT_LEGAL_NOTICE=confirm
      - RESTART_CONTAINER=no
      - TZ=${TZ}
      - WEBUI_PASS=${QBITTORRENT_PASS}
      - WEBUI_URL=${QBITTORRENT_URL}
      - WEBUI_USER=${QBITTORRENT_USER}
    image: docker.io/tenseiken/qbittorrent-wireguard:latest
    restart: unless-stopped
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    volumes:
      - ./config/torrent:/config
      - ./data/downloads:/data/downloads
networks:
  default:
    external: true
    name: x
